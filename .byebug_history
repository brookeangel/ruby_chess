c
exit
move
players.first
n
players.first
n
self[*pawn.pos]
pawn.pos
pawn
c
castle_moves
c
castle_moves
c
castle_moves
exit
1.between?(-1,1)
1.between?(2,-2)
1.between?(1,-1)
abs(-2)
abs(-2_
castle_moves
c
cc
c
cc
c
cc
c
cc
c
castle_moves
castle_movs
c
Steppable.instance_method(:moves).bind(self).call + castle_moves
c
Slideable.instance_method(:moves).bind(self).call + castle_moves
c
Slideable.instance_method(:moves).bind(self).call + castle_moves
exit
Slideable.instance_method(:moves).call(self)
Slideable.instance_method(:moves)
Slideable.instance_method(:moves).call
Slideable.instance_method(:moves).bind(self).call
Slideable.instance_method(:moves)
Sliedeable.instance_method(:moves)
Slideable
castle_moves
Slideable::moves
